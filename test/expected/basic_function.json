[
  {
    "originalText": "Private: checks if a node is a decendant of an [AtRule](http://api.postcss.org/AtRule.html).\n\n* `node` {Object} PostCSS Node to check.\n\n## Examples\n\n```js\nconst atRule = postcss.parse('@media (min-width: 480px) {a{}}').first;\nconst rule = atRule.first;\n_isAtruleDescendant(rule); // returns '(min-width: 480px)'\n```\n\nReturns {Boolean} of false, or {String} of AtRule params if true.",
    "visibility": "Private",
    "description": "checks if a node is a decendant of an [AtRule](http://api.postcss.org/AtRule.html).",
    "summary": "checks if a node is a decendant of an [AtRule](http://api.postcss.org/AtRule.html).",
    "arguments": [
      {
        "name": "node",
        "description": "{Object} PostCSS Node to check.",
        "type": "Object",
        "isOptional": false
      }
    ],
    "examples": [
      {
        "description": "",
        "lang": "js",
        "code": "const atRule = postcss.parse('@media (min-width: 480px) {a{}}').first;\nconst rule = atRule.first;\n_isAtruleDescendant(rule); // returns '(min-width: 480px)'",
        "raw": "```js\nconst atRule = postcss.parse('@media (min-width: 480px) {a{}}').first;\nconst rule = atRule.first;\n_isAtruleDescendant(rule); // returns '(min-width: 480px)'\n```"
      }
    ],
    "returnValues": [
      {
        "type": "Boolean",
        "description": "Returns {Boolean} of false, or {String} of AtRule params if true."
      }
    ]
  }
]
